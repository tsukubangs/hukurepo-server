---
"$schema": http://json-schema.org/draft-04/hyper-schema
title: FIXME - Test #このAPIリソース名
description: ここにAPIの簡単な説明を書く
stability: prototype #APIの状態？
strictProperties: true
type: #スキーマのタイプ（Object固定）
- object
definitions: #以下にこのAPIで使う属性？値を定義していく
  id: #値の名前
    description: unique identifier of test #値に対する説明
    readOnly: true
    format: uuid #値のフォーマット。種類は"date", "date-time", "email", "hostname", "ipv4", "ipv6", "uri"
    type:  #種類は"array", "boolean", "integer", "number", "null", "object", "string"
    - string
  name:
    description: unique name of test
    example: "kaname takahashi"
    readOnly: true
    type:
    - string
  identity: #スキーマ内で使いやすくする？
    anyOf:
    - "$ref": "/schemata/test#/definitions/id"
    #- "$ref": "/schemata/test#/definitions/name"
  created_at:
    description: when test was created
    format: date-time
    type:
    - string
  updated_at:
    description: when test was updated
    format: date-time
    type:
    - string
  arr_sample: #配列を使いたいとき
    description: array test
    items: #以下に配列内の要素を書く
      properties:
        id:
          "$ref": "/schemata/test#/definitions/id"
        name:
          "$ref": "/schemata/test#/definitions/name"
    type:
    - array #配列を指定

properties: #Attributesに表示されるもの（レスポンスデータのデフォルト値）
  created_at:
    "$ref": "/schemata/test#/definitions/created_at"
  id:
    "$ref": "/schemata/test#/definitions/id"
  name:
    "$ref": "/schemata/test#/definitions/name"
  updated_at:
    "$ref": "/schemata/test#/definitions/updated_at"

# hyper-schema REST APIのスキーマ部分
links:
- description: Create a new test.
  href: "/tests"
  method: POST
  rel: create
  schema: #postの内容を以下に書く
    properties: #postするデータを書く
      id:
        "$ref": "/schemata/test#/definitions/id"
      name:
        "$ref": "/schemata/test#/definitions/name"
    type:
    - object
    required: #必須のデータ（パラメータ）
    - id
  http_header: #httpのヘッダに追加するものを以下に書く
    Authorization : "token_sample"
    other-header: "hogehoge"
  title: Create
- description: Info for existing test.
  href: "/tests/{(%2Fschemata%2Ftest%23%2Fdefinitions%2Fidentity)}"
  method: GET
  rel: self
  targetSchema: #レスポンスデータを独自に設定する場合(設定しない場合デフォルトでpropertiesが入る)
    properties:
      id:
        "$ref": "/schemata/test#/definitions/id"
  title: Info
- description: List existing tests.
  href: "/tests"
  method: GET
  rel: instances #配列を返したい場合
  targetSchema: #レスポンスデータを独自に設定する場合
    "$ref": "/schemata/test#/definitions/arr_sample"
  title: List
- description: Delete an existing test.
  href: "/tests/{(%2Fschemata%2Ftest%23%2Fdefinitions%2Fidentity)}"
  method: DELETE
  rel: destroy
  title: Delete
- description: Info for existing test.
  href: "/tests/{(%2Fschemata%2Ftest%23%2Fdefinitions%2Fidentity)}"
  method: GET
  rel: self
  title: Info
- description: Update an existing test.
  href: "/tests/{(%2Fschemata%2Ftest%23%2Fdefinitions%2Fidentity)}"
  method: PATCH
  rel: update
  schema:
    properties: {}
    type:
    - object
  title: Update

id: schemata/test #このスキーマのid
