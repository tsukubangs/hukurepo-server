---
"$schema": http://json-schema.org/draft-04/hyper-schema
title: Problem
description: 外国人訪問者の困りごとを投稿，閲覧するAPI
stability: prototype
strictProperties: true
type:
- object
definitions:
  id:
    description: unique identifier of problem
    readOnly: true
    example: 1
    type:
    - integer
  comment:
    description: problem's comment
    example: 'SOX is difficult'
    type:
    - string
  image_url:
    description: stored image url
    example: '/uploads/problem/image/1/20170609002537.jpg'
    type:
    - string
  image_url_null:
    description: stored image url
    example: null
    type:
    - string
  latitude:
    description: latitude
    example: 36.10830528664971
    type:
    - number
  longitude:
    description: longitude
    example: 140.10114337330694
    type:
    - number
  user_id:
    description: user's id
    example: 1
    type:
    - integer
  responses_seen:
    description: This indicates that it is a already read response
    example: true
    type:
    - boolean
  responses_seen_false:
    description: This indicates that it is a already read response
    example: false
    type:
    - boolean
  responded:
    description: Indicate whether a reply is necessary 
    example: true
    type:
    - boolean
  identity:
    anyOf:
    - "$ref": "/schemata/problem#/definitions/id"
  created_at:
    description: when problem was created
    format: date-time
    example: "2017-06-30T15:41:41.767+09:00"
    type:
    - string
  updated_at:
    description: when problem was updated
    format: date-time
    example: "2017-06-30T15:41:41.767+09:00"
    type:
    - string

links:
- description: 困りごとを投稿するAPI　利用するにはアクセストークンをヘッダに付ける必要あり。
  href: "/v1/problems"
  method: POST
  rel: create
  schema:
    properties:
      comment:
        "$ref": "/schemata/problem#/definitions/comment"
      latitude:
        "$ref": "/schemata/problem#/definitions/latitude"
      longitude:
        "$ref": "/schemata/problem#/definitions/longitude"
      responses_seen:
        "$ref": "/schemata/problem#/definitions/responses_seen_false"
    type:
    - object
  targetSchema:
    properties:
      id:
        "$ref": "/schemata/problem#/definitions/id"
      comment:
        "$ref": "/schemata/problem#/definitions/comment"
      image_url:
        "$ref": "/schemata/problem#/definitions/image_url"
      latitude:
        "$ref": "/schemata/problem#/definitions/latitude"
      longitude:
        "$ref": "/schemata/problem#/definitions/longitude"
      user_id:
        "$ref": "/schemata/problem#/definitions/user_id"
      responded:
        "$ref": "/schemata/problem#/definitions/responded"
      responses_seen:
        "$ref": "/schemata/problem#/definitions/responses_seen_false"
      created_at:
        "$ref": "/schemata/problem#/definitions/created_at"
      updated_at:
        "$ref": "/schemata/problem#/definitions/updated_at"
  http_header:
    Authorization : "1:ABCDabcd"

  title: Create
# 後でつかうためコメントアウトで残す
# - description: Delete an existing problem.
#   href: "/problems/{(%2Fschemata%2Fproblem%23%2Fdefinitions%2Fidentity)}"
#   method: DELETE
#   rel: destroy
#   title: Delete
- description: ログインしているユーザの投稿した困りごと一覧を取得する 利用するにはアクセストークンをヘッダに付ける必要あり
  href: "/v1/problems/me"
  method: GET
  rel: instances
  title: Me
  http_header:
    Authorization : "1:ABCDabcd"

- description: 困りごとの一覧を取得する（全ユーザが対象）利用するにはアクセストークンをヘッダに付ける必要あり
  href: "/v1/problems"
  method: GET
  rel: instances
  title: List
  http_header:
    Authorization : "1:ABCDabcd"

# 後でつかうためコメントアウトで残す
# - description: Update an existing problem.
#   href: "/problems/{(%2Fschemata%2Fproblem%23%2Fdefinitions%2Fidentity)}"
#   method: PATCH
#   rel: update
#   schema:
#     properties: {}
#     type:
#     - object
#   title: Update

properties:
  id:
    "$ref": "/schemata/problem#/definitions/id"
  comment:
    "$ref": "/schemata/problem#/definitions/comment"
  image_url:
    "$ref": "/schemata/problem#/definitions/image_url"
  latitude:
    "$ref": "/schemata/problem#/definitions/latitude"
  longitude:
    "$ref": "/schemata/problem#/definitions/longitude"
  user_id:
    "$ref": "/schemata/problem#/definitions/user_id"
  responded:
    "$ref": "/schemata/problem#/definitions/responded"
  responses_seen:
    "$ref": "/schemata/problem#/definitions/responses_seen"
  created_at:
    "$ref": "/schemata/problem#/definitions/created_at"
  updated_at:
    "$ref": "/schemata/problem#/definitions/updated_at"

id: schemata/problem
